{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yuvraj\\\\Pictures\\\\GitUpload\\\\algo-visualizer\\\\src\\\\components\\\\GraphComponents\\\\Vertex.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst vertexRadius = 25;\nclass Vertex extends Component {\n  constructor(props) {\n    super(props);\n    this.dragStart = e => {\n      this.isDragging = true;\n      document.onmousemove = this.dragging;\n      document.onmouseup = this.dragEnd;\n      this.previousColor = this.state.styles.backgroundColor;\n      this.setState({\n        styles: {\n          left: this.state.styles.left,\n          top: this.state.styles.top,\n          backgroundColor: \"teal\"\n        }\n      });\n    };\n    this.dragEnd = () => {\n      this.isDragging = false;\n      document.onmousemove = null;\n      this.setState({\n        styles: {\n          left: this.state.styles.left,\n          top: this.state.styles.top,\n          backgroundColor: this.previousColor\n        }\n      });\n    };\n    this.dragging = e => {\n      if (this.isDragging) {\n        let newLeft, newTop;\n        if (e.type === \"touchmove\") {\n          newLeft = e.touches[0].clientX - vertexRadius;\n          newTop = e.touches[0].clientY - vertexRadius;\n        } else {\n          newLeft = e.clientX - vertexRadius;\n          newTop = e.clientY - vertexRadius;\n        }\n        this.setState({\n          styles: {\n            left: newLeft,\n            top: newTop,\n            backgroundColor: this.state.styles.backgroundColor\n          }\n        });\n\n        // changing edge position when node moves\n        this.props.moveIncidentEdges(this.id, newLeft + vertexRadius, newTop + vertexRadius);\n      }\n    };\n    this.changeBackgroundColor = color => {\n      this.setState({\n        styles: {\n          left: this.state.styles.left,\n          top: this.state.styles.top,\n          backgroundColor: color\n        }\n      });\n    };\n    this.changeVertexIndex = n => {\n      this.setState({\n        vertexIndex: n\n      });\n    };\n    this.id = this.props.uniqueID;\n    this.isDragging = false;\n    this.previousColor = \"aqua\";\n    this.state = {\n      vertexIndex: this.props.vertexIndex,\n      styles: {\n        left: 500,\n        top: 300,\n        backgroundColor: \"aqua\"\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag\",\n      style: this.state.styles,\n      onMouseDown: this.dragStart,\n      onMouseMove: this.dragging,\n      onMouseUp: this.dragEnd,\n      onTouchStart: this.dragStart,\n      onTouchMove: this.dragging,\n      onTouchEnd: this.dragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [this.state.vertexIndex, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Vertex;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","vertexRadius","Vertex","constructor","props","dragStart","e","isDragging","document","onmousemove","dragging","onmouseup","dragEnd","previousColor","state","styles","backgroundColor","setState","left","top","newLeft","newTop","type","touches","clientX","clientY","moveIncidentEdges","id","changeBackgroundColor","color","changeVertexIndex","n","vertexIndex","uniqueID","render","className","style","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Yuvraj/Pictures/GitUpload/algo-visualizer/src/components/GraphComponents/Vertex.js"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst vertexRadius = 25;\r\nclass Vertex extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.id = this.props.uniqueID;\r\n    this.isDragging = false;\r\n    this.previousColor = \"aqua\";\r\n    this.state = {\r\n      vertexIndex: this.props.vertexIndex,\r\n      styles: { left: 500, top: 300, backgroundColor: \"aqua\" },\r\n    };\r\n  }\r\n\r\n  dragStart = (e) => {\r\n    this.isDragging = true;\r\n    document.onmousemove = this.dragging;\r\n    document.onmouseup = this.dragEnd;\r\n\r\n    this.previousColor = this.state.styles.backgroundColor;\r\n    this.setState({\r\n      styles: {\r\n        left: this.state.styles.left,\r\n        top: this.state.styles.top,\r\n        backgroundColor: \"teal\",\r\n      },\r\n    });\r\n  };\r\n\r\n  dragEnd = () => {\r\n    this.isDragging = false;\r\n    document.onmousemove = null;\r\n    this.setState({\r\n      styles: {\r\n        left: this.state.styles.left,\r\n        top: this.state.styles.top,\r\n        backgroundColor: this.previousColor,\r\n      },\r\n    });\r\n  };\r\n\r\n  dragging = (e) => {\r\n    if (this.isDragging) {\r\n      let newLeft, newTop;\r\n      if (e.type === \"touchmove\") {\r\n        newLeft = e.touches[0].clientX - vertexRadius;\r\n        newTop = e.touches[0].clientY - vertexRadius;\r\n      } else {\r\n        newLeft = e.clientX - vertexRadius;\r\n        newTop = e.clientY - vertexRadius;\r\n      }\r\n      this.setState({\r\n        styles: {\r\n          left: newLeft,\r\n          top: newTop,\r\n          backgroundColor: this.state.styles.backgroundColor,\r\n        },\r\n      });\r\n\r\n      // changing edge position when node moves\r\n      this.props.moveIncidentEdges(\r\n        this.id,\r\n        newLeft + vertexRadius,\r\n        newTop + vertexRadius\r\n      );\r\n    }\r\n  };\r\n\r\n  changeBackgroundColor = (color) => {\r\n    this.setState({\r\n      styles: {\r\n        left: this.state.styles.left,\r\n        top: this.state.styles.top,\r\n        backgroundColor: color,\r\n      },\r\n    });\r\n  };\r\n\r\n  changeVertexIndex = (n) => {\r\n    this.setState({\r\n      vertexIndex: n,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"drag\"\r\n        style={this.state.styles}\r\n        onMouseDown={this.dragStart}\r\n        onMouseMove={this.dragging}\r\n        onMouseUp={this.dragEnd}\r\n        onTouchStart={this.dragStart}\r\n        onTouchMove={this.dragging}\r\n        onTouchEnd={this.dragEnd}\r\n      >\r\n        <h3>{this.state.vertexIndex} </h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Vertex;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}