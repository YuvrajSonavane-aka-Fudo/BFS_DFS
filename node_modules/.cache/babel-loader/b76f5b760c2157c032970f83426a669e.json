{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yuvraj\\\\Pictures\\\\Stolenwork\\\\algo-visualizer\\\\src\\\\algorithms\\\\TopologicalSort\\\\TopologicalSortVisualization.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport asyncTimeOut from \"../../helpers/asyncTimeOut\";\nimport Stack from \"../../helpers/dataStructures/Stack\";\n\n//const delayTime = 1000;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopologicalSortVisualization = props => {\n  _s();\n  const vertexIndices = new Map();\n  const stack = new Stack();\n  const delayTime = props.visualizationSpeed;\n  const [visited, setVisited] = useState(new Array(props.noOfVertices).fill(false));\n  const TopoUtil = async vertexID => {\n    const incidentEdges = props.adjList.get(vertexID);\n    const connectedVerticesID = incidentEdges.map(id => props.edgeRefs.get(id).current.getOtherVertexID(vertexID));\n    for (var i = 0; i < connectedVerticesID.length; i++) {\n      const vertexIndex = vertexIndices.get(connectedVerticesID[i]);\n      if (!visited[vertexIndex]) {\n        var newVisited = visited;\n        newVisited[vertexIndex] = true;\n        await asyncTimeOut(delayTime);\n        props.edgeRefs.get(incidentEdges[i]).current.changeBackgroundColor(\"#ED3C61\");\n        props.vertexRefs.get(connectedVerticesID[i]).current.changeBackgroundColor(\"#ED3C61\");\n        setVisited(newVisited);\n        await TopoUtil(connectedVerticesID[i]);\n        await asyncTimeOut(delayTime);\n        props.vertexRefs.get(connectedVerticesID[i]).current.changeBackgroundColor(\"#01B878\");\n        props.edgeRefs.get(incidentEdges[i]).current.changeBackgroundColor(\"#01B878\");\n      }\n    }\n    stack.push(vertexIndices.get(vertexID));\n  };\n  const visualizeTopologicalSort = async () => {\n    var newVisited = visited;\n    newVisited[props.startingVertex] = true;\n    await asyncTimeOut(delayTime);\n    props.vertexRefs.get(props.vertexIDs[props.startingVertex]).current.changeBackgroundColor(\"#ED3C61\");\n    setVisited(newVisited);\n    await TopoUtil(props.vertexIDs[props.startingVertex]);\n    for (var i = 0; i < props.noOfVertices; i++) {\n      if (!visited[i]) {\n        newVisited = visited;\n        newVisited[i] = true;\n        await asyncTimeOut(delayTime);\n        props.vertexRefs.get(props.vertexIDs[i]).current.changeBackgroundColor(\"#ED3C61\");\n        setVisited(newVisited);\n        await TopoUtil(props.vertexIDs[i]);\n      }\n    }\n\n    // console.log(stack.elements());\n    props.setTopoSort(stack.elements());\n    props.setTopoModalOpen(true);\n    props.endVisualizing();\n    // props.vertexRefs\n    //   .get(props.vertexIDs[props.startingVertex])\n    //   .current.changeBackgroundColor(\"#01B878\");\n  };\n  useEffect(() => {\n    for (var i = 0; i < props.noOfVertices; i++) {\n      vertexIndices.set(props.vertexIDs[i], i);\n    }\n    visualizeTopologicalSort();\n  }, []);\n\n  // create component for DFS data\n  // here we need to return that\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 10\n  }, this);\n};\n_s(TopologicalSortVisualization, \"4k6c210H78uixCkWgYkkdk1PaZQ=\");\n_c = TopologicalSortVisualization;\nexport default TopologicalSortVisualization;\nvar _c;\n$RefreshReg$(_c, \"TopologicalSortVisualization\");","map":{"version":3,"names":["useState","useEffect","asyncTimeOut","Stack","jsxDEV","_jsxDEV","TopologicalSortVisualization","props","_s","vertexIndices","Map","stack","delayTime","visualizationSpeed","visited","setVisited","Array","noOfVertices","fill","TopoUtil","vertexID","incidentEdges","adjList","get","connectedVerticesID","map","id","edgeRefs","current","getOtherVertexID","i","length","vertexIndex","newVisited","changeBackgroundColor","vertexRefs","push","visualizeTopologicalSort","startingVertex","vertexIDs","setTopoSort","elements","setTopoModalOpen","endVisualizing","set","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Yuvraj/Pictures/Stolenwork/algo-visualizer/src/algorithms/TopologicalSort/TopologicalSortVisualization.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport asyncTimeOut from \"../../helpers/asyncTimeOut\";\r\nimport Stack from \"../../helpers/dataStructures/Stack\";\r\n\r\n//const delayTime = 1000;\r\nconst TopologicalSortVisualization = (props) => {\r\n  const vertexIndices = new Map();\r\n  const stack = new Stack();\r\n  const delayTime = props.visualizationSpeed;\r\n  const [visited, setVisited] = useState(\r\n    new Array(props.noOfVertices).fill(false)\r\n  );\r\n\r\n  const TopoUtil = async (vertexID) => {\r\n    const incidentEdges = props.adjList.get(vertexID);\r\n    const connectedVerticesID = incidentEdges.map((id) =>\r\n      props.edgeRefs.get(id).current.getOtherVertexID(vertexID)\r\n    );\r\n\r\n    for (var i = 0; i < connectedVerticesID.length; i++) {\r\n      const vertexIndex = vertexIndices.get(connectedVerticesID[i]);\r\n\r\n      if (!visited[vertexIndex]) {\r\n        var newVisited = visited;\r\n        newVisited[vertexIndex] = true;\r\n\r\n        await asyncTimeOut(delayTime);\r\n\r\n        props.edgeRefs\r\n          .get(incidentEdges[i])\r\n          .current.changeBackgroundColor(\"#ED3C61\");\r\n        props.vertexRefs\r\n          .get(connectedVerticesID[i])\r\n          .current.changeBackgroundColor(\"#ED3C61\");\r\n\r\n        setVisited(newVisited);\r\n\r\n        await TopoUtil(connectedVerticesID[i]);\r\n        await asyncTimeOut(delayTime);\r\n\r\n        props.vertexRefs\r\n          .get(connectedVerticesID[i])\r\n          .current.changeBackgroundColor(\"#01B878\");\r\n        props.edgeRefs\r\n          .get(incidentEdges[i])\r\n          .current.changeBackgroundColor(\"#01B878\");\r\n      }\r\n    }\r\n\r\n    stack.push(vertexIndices.get(vertexID));\r\n  };\r\n\r\n  const visualizeTopologicalSort = async () => {\r\n    var newVisited = visited;\r\n    newVisited[props.startingVertex] = true;\r\n\r\n    await asyncTimeOut(delayTime);\r\n    props.vertexRefs\r\n      .get(props.vertexIDs[props.startingVertex])\r\n      .current.changeBackgroundColor(\"#ED3C61\");\r\n\r\n    setVisited(newVisited);\r\n\r\n    await TopoUtil(props.vertexIDs[props.startingVertex]);\r\n\r\n    for (var i = 0; i < props.noOfVertices; i++) {\r\n      if (!visited[i]) {\r\n        newVisited = visited;\r\n        newVisited[i] = true;\r\n\r\n        await asyncTimeOut(delayTime);\r\n        props.vertexRefs\r\n          .get(props.vertexIDs[i])\r\n          .current.changeBackgroundColor(\"#ED3C61\");\r\n\r\n        setVisited(newVisited);\r\n\r\n        await TopoUtil(props.vertexIDs[i]);\r\n      }\r\n    }\r\n\r\n    // console.log(stack.elements());\r\n    props.setTopoSort(stack.elements());\r\n    props.setTopoModalOpen(true);\r\n    props.endVisualizing();\r\n    // props.vertexRefs\r\n    //   .get(props.vertexIDs[props.startingVertex])\r\n    //   .current.changeBackgroundColor(\"#01B878\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    for (var i = 0; i < props.noOfVertices; i++) {\r\n      vertexIndices.set(props.vertexIDs[i], i);\r\n    }\r\n\r\n    visualizeTopologicalSort();\r\n  }, []);\r\n\r\n  // create component for DFS data\r\n  // here we need to return that\r\n  return <div></div>;\r\n};\r\n\r\nexport default TopologicalSortVisualization;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}